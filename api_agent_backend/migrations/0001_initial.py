# Generated by Django 5.2 on 2025-05-08 09:07

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DetectedImage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('image_data', models.TextField()),
                ('person_count', models.IntegerField()),
                ('cell_phone_detected', models.BooleanField()),
                ('openai_session_id', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'detected_images',
            },
        ),
        migrations.CreateModel(
            name='InterviewTranscript',
            fields=[
                ('itemId', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('role', models.CharField(blank=True, max_length=50, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('timestamp', models.CharField(blank=True, max_length=50, null=True)),
                ('createdAtMs', models.BigIntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('isHidden', models.BooleanField(blank=True, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('Vision_Analysis', models.TextField(blank=True, null=True)),
                ('Agent', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'interview_transcripts',
            },
        ),
        migrations.CreateModel(
            name='JobDetails',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('job_id', models.CharField(default=99999999, max_length=100)),
                ('title', models.TextField(default='Unknown')),
                ('description', models.TextField(default='Unknown')),
                ('technical_skills', models.TextField(default='Unknown')),
                ('behavioural_skills', models.TextField(blank=True, default='Unknown', null=True)),
                ('focus_skills', models.TextField(default='Unknown')),
                ('industry', models.CharField(default='Unknown', max_length=800)),
                ('min_experience', models.CharField(default='Unknown', max_length=100)),
                ('max_experience', models.CharField(default='Unknown', max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('webhook_url', models.CharField(default='Unknown', max_length=1000)),
            ],
            options={
                'db_table': 'job_details',
            },
        ),
        migrations.CreateModel(
            name='LipsyncSession',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('lipsync_session_id', models.CharField(max_length=255, unique=True)),
                ('openai_session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('batch_id', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'lipsync_openaiid_batchid',
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('type', models.CharField(max_length=255)),
                ('event', models.JSONField()),
                ('suffix', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'logs',
            },
        ),
        migrations.CreateModel(
            name='StudentJobData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('batch_id', models.CharField(default='Unknown', max_length=100)),
                ('student_name', models.CharField(default='Unknown', max_length=100)),
                ('education', models.CharField(default='Unknown', max_length=100)),
                ('student_experience', models.CharField(default='Unknown', max_length=100)),
                ('certfication', models.JSONField(default=dict)),
                ('skills', models.CharField(default='Unknown', max_length=1000)),
                ('projects', models.JSONField(default=dict)),
                ('selected_language', models.CharField(default='Unknown', max_length=50)),
                ('agent', models.CharField(default='Unknown', max_length=1002)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('job_id', models.CharField(default='Unknown', max_length=100)),
            ],
            options={
                'db_table': 'student_job_data',
            },
        ),
        migrations.CreateModel(
            name='TabswitchData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('session_id', models.CharField(max_length=255)),
                ('image_data', models.BinaryField(blank=True, null=True)),
                ('tabevent', models.CharField(blank=True, max_length=255, null=True)),
                ('tabswitch_count', models.IntegerField(blank=True, null=True)),
                ('fullscreen_exit_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'tabswitch_data',
            },
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('openai_session_id', models.CharField(max_length=255)),
                ('feedback', models.TextField()),
                ('rating', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'user_feedback',
            },
        ),
        migrations.CreateModel(
            name='InterviewEvaluation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('session_id', models.CharField(max_length=255)),
                ('evaluation_text', models.TextField(blank=True, null=True)),
                ('performance_score', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('Camera_uploads', models.TextField(blank=True, null=True)),
                ('screen_uploads', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'interview_evaluations',
                'constraints': [models.CheckConstraint(condition=models.Q(('performance_score__gte', 0), ('performance_score__lte', 100)), name='performance_score_between_0_and_100')],
            },
        ),
    ]
